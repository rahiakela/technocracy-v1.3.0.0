
module.exports.getJavaDocuments = () => {
    const doc1 = `
        Java is a high-level programming language originally developed by Sun Microsystems and released in 1995. Java runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX. This tutorial gives a complete understanding of Java. This reference will take you through simple and practical approaches while learning Java Programming language.
        Java programming language was originally developed by Sun Microsystems which was initiated by James Gosling and released in 1995 as core component of Sun Microsystems' Java platform (Java 1.0 [J2SE]).
        The latest release of the Java Standard Edition is Java SE 8. With the advancement of Java and its widespread popularity, multiple configurations were built to suit various types of platforms. For example: J2EE for Enterprise Applications, J2ME for Mobile Applications.
        The new J2 versions were renamed as Java SE, Java EE, and Java ME respectively. Java is guaranteed to be Write Once, Run Anywhere.
        In Java, everything is an Object. Java can be easily extended since it is based on the Object model.Unlike many other programming languages including C and C++, when Java is compiled, it is not compiled into platform specific machine, rather into platform independent byte code. This byte code is distributed over the web and interpreted by the Virtual Machine (JVM) on whichever platform it is being run on.
        Java is designed to be easy to learn. If you understand the basic concept of OOP Java, it would be easy to master.With Java's secure feature it enables to develop virus-free, tamper-free systems. Authentication techniques are based on public-key encryption.
        Java compiler generates an architecture-neutral object file format, which makes the compiled code executable on many processors, with the presence of Java runtime system.
        Being architecture-neutral and having no implementation dependent aspects of the specification makes Java portable. Compiler in Java is written in ANSI C with a clean portability boundary, which is a POSIX subset.
        Java makes an effort to eliminate error prone situations by emphasizing mainly on compile time error checking and runtime checking.
        With Java's multithreaded feature it is possible to write programs that can perform many tasks simultaneously. This design feature allows the developers to construct interactive applications that can run smoothly.
        Java byte code is translated on the fly to native machine instructions and is not stored anywhere. The development process is more rapid and analytical since the linking is an incremental and light-weight process.
        Java is considered to be more dynamic than C or C++ since it is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.
        James Gosling initiated Java language project in June 1991 for use in one of his many set-top box projects. The language, initially called ‘Oak’ after an oak tree that stood outside Gosling's office, also went by the name ‘Green’ and ended up later being renamed as Java, from a list of random words.
        If you are still willing to set up your environment for Java programming language, then this section guides you on how to download and set up Java on your machine. Following are the steps to set up the environment.
        `;
    const doc2 = `
        Java is the foundation for virtually every type of networked application and is the global standard for developing and delivering embedded applications, games, web content, and enterprise software. Used by more than 12 million developers worldwide, Java enables you to efficiently develop and deploy exciting applications and services.
        When you want more—more selection, protection, and power for embedded applications—Java is the choice. Oracle Java Embedded products are designed and optimized to meet the unique requirements of embedded devices, such as microcontrollers, sensors, and gateways. They enable intelligent systems for M2M communications and the Internet of Things so you can do more with your devices.
        Java Platform, Standard Edition (Java SE) enables you to develop secure, portable, high-performance applications for the widest range of computing platforms possible. By making applications available across heterogeneous environments, businesses can boost end-user productivity, communication, and collaboration—and dramatically reduce the cost of ownership of both enterprise and consumer applications.
        Java Platform, Enterprise Edition (Java EE) is the industry standard for enterprise Java computing. With new features that enhance HTML5 support, increase developer productivity, and further improve how enterprise demands can be met, Java EE 7 enables developers to write less boilerplate code, have better support for the latest Web applications and frameworks, and access enhanced scalability and richer functionality.
        Oracle Java Cloud Service provides an enterprise-grade platform to develop and deploy business applications in the cloud. It enables you to maximize productivity with instant access to cloud environments that support any standard Java EE application, complete with integrated security and database access—all powered by Oracle WebLogic Server.
        Java is one of the most popular and widely used programming language and platform. A platform is an environment that helps to develop and run programs written in any programming language.
        Java is fast, reliable and secure. From desktop to web applications, scientific supercomputers to gaming consoles, cell phones to the Internet, Java is used in every nook and corner.
        Java is easy to learn and its syntax is simple and easy to understand. It is based on C++ (so easier for programmers who know C++). Java has removed many confusing and rarely-used features e.g. explicit pointers, operator overloading etc. Java also takes care about memory management and for that, it provides an automatic garbage collector. This collects the unused objects automatically.
        The programs written in Java language, after compilation, are converted into an intermediate level language called the bytecode which is irrespective of the machine on which the programs run. This makes java highly portable as its bytecodes can be run on any machine by an interpreter called the Java Virtual Machine(JVM) and thus java provides ‘reusability of code’.
        Java programs must be reliable because they are used in both consumer and mission-critical applications, ranging from Blu-ray players to navigation systems.
        Java can perform many tasks at once by defining multiple threads. For example, a program that manages a Graphical User Interface (GUI) while waiting for input from a network connection uses another thread to perform the wait instead of using the default GUI thread for both tasks. This keeps the GUI responsive.
        `;
    const doc3 = `
        Many a time it will be overwhelming but be patient, learn at your own pace, don’t rush. Mastering Java is not a one day process. And remember even the best coders would have had started at some point. So it’s not a big deal, you can also do it. Give it your time. Patience is the key to success.
        Java technology allows you to work and play in a secure computing environment. Upgrading to the latest Java version improves the security of your system, as older versions do not include the latest security updates.
        Java allows you to play online games, chat with people around the world, calculate your mortgage interest, and view images in 3D, just to name a few.
        Java software for your computer, or the Java Runtime Environment, is also referred to as the Java Runtime, Runtime Environment, Runtime, JRE, Java Virtual Machine, Virtual Machine, Java VM, JVM, VM, Java plug-in, Java plugin, Java add-on or Java download.
        Blogs can provide great insight and perspective from industry peers and colleagues. All over the world, Java professionals are posting daily about new findings or new feature functions. Unfortunately, blogs can also provide some not so great insight and perspective. With such an overabundance of voices trying to earn your attention, it can be difficult to find the good, from the bad and the ugly.
        Luckily, we are here to help. We’ve searched high and low and found some of the most credible, unique, and just plain awesome communities and experts talking about all things Java. Whether you’re a 15-year Java artisan or interested in entering the world of programming for the first time, we have a resource for you.
        Vlad Mihalcea is a world-class Java expert and a highly respected mentor of the craft. Dating back to 2014, Vlad has been a dedicated blogger and teacher, and currently reaches about 75k visitors a month. Most recently, Vlad has been taking a look at Hibernate and identifying new tips, tricks, and best practices. With a wide variety of articles, there is information available for developers of any level.
        Many Java developers ask me How to become a better programmer, how do I improve my programming skills, or I am good at Java but not so good on problem-solving skill etc. This is a reality, today's era is full of language expert than real programmers. It's easy to understand keywords, methods, and API of Java programming language, but same time it's difficult to solve real problems, design reusable and robust software and get the maximum of data structure and algorithm. I have often seen Java programmers are not doing so well when asked to design and code a solution in limited time, but same time they are really good with Java concepts and all theory. Even senior programmers of 4 to 6 years experience in Java programming, sometimes fail to solve questions like designing
        About Blog Java Code Geeks is an independent online community focused on creating the ultimate Java-to-Java developers resource center; targeted at the technical architect, technical team lead (senior developer), project manager and junior developers alike. JCGs serve the Java, Scala, Android, SOA, Agile and Telecom communities with daily news written by domain experts.
        I made a few resolutions, including one that has become an evergreen for the last few years. Before you start laughing, it’s not one of these that I make and forget a few weeks later, like doing paperwork on the day it arrives. This one I’ve kept for the last five years and it had a huge impact on my career. On at least three days a week, I read a good book or some blog posts about Java and Java EE. That might not sound like a lot but it adds up over the years, and it helped me to become a better developer, blogger, and trainer for JPA and Hibernate.
        `;
    const doc4 = `
        The only thing you now need is a few good blogs to get you started. I prepared a list of blogs that I liked in 2016 and that I think will help you improve your Java knowledge in 2017. OK, let’s talk about the most obvious recommendations first. You are reading my guest post here on the SitePoint Java channel and I also have my own site. It’s pretty obvious that there are two blogs that will make the list of recommendations.
        I’m mostly writing about JPA and Hibernate on my own blog, and I publish 2-3 new posts every week. I try to provide a good mixture of posts for beginners, intermediate and advanced developers so that everyone can find a solution for her/his current problem and learn something new.
        Heinz Kabutz is writing his monthly newsletter for more than 16 years, now. This one is a good read for all advanced Java developers who want to learn more about Java performance and concurrency.
        Baeldung is one of the bigger sites in the Java ecosystem. Each month, Eugen and his team publish more than 30 posts about Spring and other Java topics suited for beginners to advanced developers. I always find something new and interesting to read when I visit his site.
        You might know jOOQ as a framework to define SQL queries, but that’s not the only thing you can find on its website. Lukas Eder also writes a great blog with posts about Java, SQL, and general software development issues like licensing and naming things. If you are a developer who needs to persist data in a relational database, just want to learn more about software development with Java, or like the occasional, well-written rant, you should read Lukas’ blog.
        Adam Bien is a well-known conference speaker, author, and trainer. He is also a prolific blogger who regularly publishes short examples on how to implement certain tasks with Java and Java EE. This blog is a good read for all developers working with Java EE.
        Vlad Mihalcea is Hibernate’s developer advocate and writes regularly about Hibernate and related topics. His blog is another great resource if you have some experience with Hibernate and want to learn more about it.
        Romain Manni-Bucau is a software engineer at Tomitribe and Committer of the Apache Software Foundation for several Java EE projects. It’s not a surprise that he also writes good blog posts about Java EE. I highly recommend his blog to all Java EE developers.
        Servlet technology is robust and scalable because of java language. Before Servlet, CGI (Common Gateway Interface) scripting language was common as a server-side programming language. However, there were many disadvantages to this technology. We have discussed these disadvantages below.
        There are many interfaces and classes in the Servlet API such as Servlet, GenericServlet, HttpServlet, ServletRequest, ServletResponse, etc.
        A web application is an application accessible from the web. A web application is composed of web components like Servlet, JSP, Filter, etc. and other elements such as HTML, CSS, and JavaScript. The web components typically execute in Web Server and respond to the HTTP request.
        `;
    const doc5 = `
       An object of ServletRequest is used to provide the client request information to a servlet such as content type, content length, parameter names and values, header informations, attributes etc.
       JSP technology is used to create web application just like Servlet technology. It can be thought of as an extension to Servlet because it provides more functionality than servlet such as expression language, JSTL, etc.
       A JSP page consists of HTML tags and JSP tags. The JSP pages are easier to maintain than Servlet because we can separate designing and development. It provides some additional features such as Expression Language, Custom Tags, etc.
       MVC stands for Model View and Controller. It is a design pattern that separates the business logic, presentation logic and data.The JSP Standard Tag Library (JSTL) represents a set of tags to simplify the JSP development.
       The struts 2 framework is used to develop MVC-based web application.The struts framework was initially created by Craig McClanahan and donated to Apache Foundation in May, 2000 and Struts 1.0 was released in June 2001.
       The JavaMail is an API that is used to compose, write and read electronic messages (emails).The JavaMail API provides protocol-independent and plateform-independent framework for sending and receiving mails.
       The javax.mail and javax.mail.activation packages contains the core classes of JavaMail API.The JavaMail facility can be applied to many events. It can be used at the time of registering the user (sending notification such as thanks for your interest to my site), forgot password (sending password to the users email id), sending notifications for important updates etc. So there can be various usage of java mail api.
       Hibernate is a Java framework that simplifies the development of Java application to interact with the database. It is an open source, lightweight, ORM (Object Relational Mapping) tool. Hibernate implements the specifications of JPA (Java Persistence API) for data persistence.
       An ORM tool simplifies the data creation, data manipulation and data access. It is a programming technique that maps the object to the data stored in the database.
       Java Persistence API (JPA) is a Java specification that provides certain functionality and standard to ORM tools. The javax.persistence package contains the JPA classes and interfaces.
       Spring is a lightweight framework. It can be thought of as a framework of frameworks because it provides support to various frameworks such as Struts, Hibernate, Tapestry, EJB, JSF etc. The framework, in broader sense, can be defined as a structure where we find solution of the various technical problems.
       Dependency Injection (DI) is a design pattern that removes the dependency from the programming code so that it can be easy to manage and test the application. Dependency Injection makes our programming code loosely coupled. To understand the DI better, Let's understand the Dependency Lookup (DL) first:
       Spring Boot is a Spring module which provides RAD (Rapid Application Development) feature to Spring framework.JDBC stands for Java Database Connectivity. JDBC is a Java API to connect and execute the query with the database. It is a part of JavaSE (Java Standard Edition). JDBC API uses JDBC drivers to connect with the database. There are four types of JDBC drivers:
        `;

    const javaDocuments = [
        doc1, doc2, doc3, doc4, doc5
    ];

    return javaDocuments;
};
